{"version":3,"sources":["components/Header.js","firebase.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","state","menu","toggleMenu","open","_this","setState","classes","this","props","react_default","a","createElement","className","root","index_es","position","appBar","title","variant","color","noWrap","grow","React","Component","withStyles","width","top","zIndex","background","flexGrow","menuButton","marginLeft","marginRight","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","base","Rebase","createClass","Main","loading","text","handleClose","sendMessage","value","content","handleSend","newMessage","date","Date","now","push","data","then","catch","err","console","log","_this2","react","container","noValidate","autoComplete","TextField_default","id","label","placeholder","textField","margin","inputRef","el","multiline","rows","Button_default","button","onClick","btnText","Dialog_default","aria-labelledby","onClose","DialogTitle_default","DialogContent_default","CircularProgress_default","progress","DialogContentText_default","DialogActions_default","theme","flexWrap","backgroundColor","padding","borderRadius","rightIcon","spacing","unit","display","createMuiTheme","palette","primary","light","main","contrastText","typography","useNextVariants","App","styles","components_Header","components_Main","bottom","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.780fbfa1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AppBar, Toolbar, Typography, withStyles } from '@material-ui/core'\r\n\r\nconst styles = {\r\n    root: {\r\n        width: '100%',\r\n        position: 'fixed',\r\n        top: 0,\r\n        zIndex: 2,\r\n    },\r\n    appBar: {\r\n        background: '#000'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    }\r\n}\r\n\r\nclass Header extends React.Component {\r\n\r\n    state = {\r\n        menu: false,\r\n    }\r\n\r\n    toggleMenu = (open) => () => {\r\n        this.setState({ menu: open })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>Mensagens B103</Typography>\r\n                        <div className={classes.grow} />\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Header)","import Rebase from 're-base'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/database'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBWjdUTPvW7sDNcy8ys8xUUrXjHy1nar2I\",\r\n    authDomain: \"b103brooklin-294c7.firebaseapp.com\",\r\n    databaseURL: \"https://b103brooklin-294c7.firebaseio.com\",\r\n    projectId: \"b103brooklin-294c7\",\r\n    storageBucket: \"b103brooklin-294c7.appspot.com\",\r\n    messagingSenderId: \"433304653982\"\r\n})\r\n\r\nconst db = firebase.database(app)\r\nconst base = Rebase.createClass(db)\r\n\r\nexport default base","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { Typography } from '@material-ui/core'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport firebase from '../firebase'\n\nconst styles = theme => ({\n  container: {\n    position: 'relative',\n    top: 60,\n    flexWrap: 'wrap',\n    margin: 16,\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n    borderRadius: 6\n  },\n  textField: {\n    width: '100%',\n  },\n  button: {\n    margin: '20px 0 0',\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  btnText: {\n    color: '#FFFFFF'\n  },\n  progress: {\n    display: 'block',\n    margin: '16px auto'\n  }\n})\n\nclass Main extends React.Component {\n\n  state = {\n    open: false,\n    loading: true,\n    text: ''\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  sendMessage = () => {\n    this.setState({ loading: false, text : \"Mensagem enviada com sucesso!\" })\n    this.title.value = \"\"\n    this.content.value = \"\"\n  }\n\n  handleSend = () => {\n    this.setState({ open: true, loading: true })\n    let newMessage = {\n      title: this.title.value,\n      content: this.content.value,\n      date: Date.now()\n    }\n\n    if (newMessage.title === \"\" || newMessage.content === \"\") {\n      this.setState({ loading: false, text : \"Preencher 'TÃ­tulo' e 'Texto' da mensagem\" })\n      return false\n    } else {\n      // setTimeout(this.sendMessage, 1000) // Teste local\n      firebase.push('messages', {\n        data: newMessage\n      }).then(data => {\n        this.setState({ loading: false, text : \"Mensagem enviada com sucesso!\" })\n        this.title.value = \"\"\n        this.content.value = \"\"\n      }).catch(err => {\n        console.log(err)\n      })\n    }\n    \n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <Fragment>\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-with-placeholder\"\n            label=\"TÃ­tulo da mensagem\"\n            placeholder=\"TÃ­tulo da mensagem\"\n            className={classes.textField}\n            margin=\"normal\"\n            inputRef={el => this.title = el}\n          />\n          <TextField\n            id=\"standard-multiline-static\"\n            label=\"Texto da mensagem\"\n            multiline\n            rows=\"4\"\n            className={classes.textField}\n            margin=\"normal\"\n            inputRef={el => this.content = el}\n          />\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.handleSend}>\n            <Typography className={classes.btnText}>Enviar</Typography>\n          </Button>\n        </form>\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={this.state.open} onClose={this.handleClose}>\n          <DialogTitle id=\"simple-dialog-title\">\n            { this.state.loading ? 'Enviando...' : 'Aviso' }\n          </DialogTitle>\n          <DialogContent>\n            { this.state.loading ? \n              <CircularProgress className={classes.progress} /> : \n              <DialogContentText id=\"alert-dialog-slide-description\">{this.state.text}</DialogContentText>\n            }\n          </DialogContent>\n          <DialogActions>\n            { !this.state.loading && <Button onClick={this.handleClose} color=\"primary\">OK</Button> }\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n\n    )\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Main)","import React, { Component } from 'react'\r\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core'\r\n\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\nconst Color = {\r\n    light: '#FFFFFF',\r\n    main: '#000000',\r\n    primary: '#000000',\r\n    contrastText: '#fff'\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: Color\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    }\r\n})\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Header />\r\n                <Main />\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './styles/index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}